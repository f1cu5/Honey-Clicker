import { useMemo } from "react";
import { UserProfileProps } from "../types/userProfileProps";
import {
  BuyButton,
  Container,
  Cost,
  Description,
  Header,
  ItemName,
  ItemWrapper,
  LockedContainer,
} from "../styles";
import { achievements, items } from "../constants";
import BuySound from "../assets/sounds/buy.mp3";
import { formatNumber, playSound, showToast } from "../utils";
import { Tooltip } from "@mui/material";

// –ù–æ–≤–∞—è —Ü–µ–Ω–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ —Å–ª–µ–¥—É—é—â–µ–π —Ñ–æ—Ä–º—É–ª–µ:
// newCost = costBase * (rateGrowth ^ itemCount)
// –≥–¥–µ CostBase ‚Äî –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞,
// rateGrowth¬†‚Äî –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–æ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, 1,1 –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞ 10%),
// –∏ itemCount ‚Äî —Ç–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

export const Shop = ({ userProfile, setUserProfile }: UserProfileProps) => {
  const rateGrown = 1.213742069;
  const descriptionMaxLength = 169;
  const handleBuyItem = (item: string) => {
    playSound(BuySound, userProfile.audioVolume);
    const selectedItem = items[item];

    const itemCount = userProfile.inventory[item] || 0;
    const newCost = Math.floor(
      selectedItem.cost * Math.pow(rateGrown, itemCount)
    );
    const newPoints = userProfile.points - newCost;
    const newMultiplier = userProfile.multiplier + selectedItem.multiplier;
    const newPerSecond = userProfile.perSecond + selectedItem.perSecond;
    const newInventory = { ...userProfile.inventory };

    newInventory[item] = (newInventory[item] || 0) + 1;
    setUserProfile({
      ...userProfile,
      points: newPoints,
      multiplier: newMultiplier,
      perSecond: newPerSecond,
      inventory: newInventory,
    });
    const purchasedItemsSum = Object.values(userProfile.inventory).reduce(
      (a, b) => a + b,
      1
    );
    if (!userProfile.inventory[item]) {
      showToast({
        header: "–ù–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!",
        text: `${selectedItem.name} ${selectedItem.emoji}`,
        emoji: "üîì",
        volume: userProfile.audioVolume,
      });
    }
    const unlockedPurchaseAchievements = Object.values(achievements).filter(
      (achievement) =>
        achievement.purchasesRequired !== undefined &&
        purchasedItemsSum >= achievement.purchasesRequired &&
        !userProfile.achievements.includes(achievement.name)
    );
    if (unlockedPurchaseAchievements.length > 0) {
      // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–µ.
      unlockedPurchaseAchievements.forEach((achievement) => {
        showToast({
          header: `${achievement.name} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!`,
          text: achievement.description,
          emoji: achievement.emoji,
          volume: userProfile.audioVolume,
        });
      });

      const newAchievements = userProfile.newAchievements + 1;
      // –î–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∫–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      setUserProfile({
        ...userProfile,
        points: newPoints,
        multiplier: newMultiplier,
        perSecond: newPerSecond,
        inventory: newInventory,
        achievements: [
          ...userProfile.achievements,
          ...unlockedPurchaseAchievements.map(
            (achievement) => achievement.name
          ),
        ],
        newAchievements: newAchievements,
        dateAchievements: {
          ...userProfile.dateAchievements,
          [unlockedPurchaseAchievements[0].name]: new Date(),
        },
      });
    }
  };

  const numLockedItems = useMemo(() => {
    return Object.values(items).filter(
      (item) => item.cost > userProfile.maxPoints
    ).length;
  }, [userProfile.maxPoints]);

  return (
    <div>
      <Header>üõí –ú–∞–≥–∞–∑–∏–Ω</Header>

      <Container>
        {Object.entries(items).map(([itemName, item]) => {
          if (item.cost > userProfile.maxPoints) {
            return null;
          }

          const itemCount = userProfile.inventory[itemName] || 0;
          const newCost = Math.floor(
            item.cost * Math.pow(rateGrown, itemCount)
          );

          return (
            <ItemWrapper key={itemName}>
              <ItemName>
                {item.emoji} {item.name}
              </ItemName>
              {/* –ø–æ–¥—Å–∫–∞–∑–∫–∞ —Å –æ—Å—Ç–∞–ª—å–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º, –µ—Å–ª–∏ –æ–Ω–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–∞—è */}
              <Tooltip
                title={
                  item.description.length > descriptionMaxLength
                    ? `${item.description.substring(descriptionMaxLength)}`
                    : null
                }
              >
                <Description>
                  ‚Äù
                  {item.description.length > descriptionMaxLength
                    ? `${item.description.substring(
                        0,
                        descriptionMaxLength
                      )}...`
                    : item.description}
                  ‚Äù
                </Description>
              </Tooltip>
              <Cost enoughtPoints={userProfile.points >= newCost}>
                –¶–µ–Ω–∞: üçØ{formatNumber(newCost, 0)}
              </Cost>
              <p>–ú–Ω–æ–∂–∏—Ç–µ–ª—å: {formatNumber(item.multiplier, 0)}</p>
              <p>–í —Å–µ–∫—É–Ω–¥—É: {formatNumber(item.perSecond, 1)}</p>
              <p>–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏: {formatNumber(itemCount, 0)}</p>

              <BuyButton
                disabled={newCost > userProfile.points}
                onClick={() => {
                  handleBuyItem(itemName);
                }}
              >
                {newCost > userProfile.points ? "–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥" : "–ö—É–ø–∏—Ç—å"}
              </BuyButton>
            </ItemWrapper>
          );
        })}
        {numLockedItems > 0 && (
          <LockedContainer>
            <h3>üîí –ù–µ –¥–æ—Å—Ç—É–ø–Ω–æ ({numLockedItems} –ø—Ä–µ–¥–º–µ—Ç–æ–≤)</h3>
          </LockedContainer>
        )}
      </Container>

      <div style={{ paddingTop: "85px" }} />
    </div>
  );
};
